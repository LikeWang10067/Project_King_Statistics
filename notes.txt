First thing first, create a new repo in GitHub, since I am the only coder, I am not going to create a child branch.

Create a file called get_statistics.py, I get a quick start on how to use GitHub api with this video: "https://www.youtube.com/watch?v=-kFyPaHNgXo". Since Kaggle is a org account, implement this in url: `url = f"{GITHUB_API_URL}/orgs/{ORG_NAME}/repos"`

During the debugging process, in function `get_repository_statistics`, after run through the line with `statistics = response.json()`, you will see a lot of information about this repo: 
--- stargazers_count: meaning the stars
--- forks_count: meaning the number of fork
--- subscribers_count: meaning the number of watch

With the basic setup, let's dig deeper: find the number of commits for this repo: I use this page for assistance `https://docs.github.com/en/rest/commits/commits?apiVersion=2022-11-28`

Problem 1: if I directly call "{GITHUB_API_URL}/repos/{ORG_NAME}/{repo_name}/commits", it's only giving me the latest 30 commits.
(It seems that there no easy way to directly get the total number, let's just do page by page then) Same for "contributors"

Problem 2: Sometimes I would get 403 when access data from GitHub repo, sometimes everything is fine. After dig a little deeper, I realize that GitHub will limit the number of unauthenticated requests, we can try to mitigate this problem by:
1. Generating a access token, but will be expired (for safety concerns)
2. Adding "time.sleep()", but time.sleep() would slow down the process'

Problem 3: The number of the contributors and closed_issues is not the right number.
For false number of contributors:
	contributors actual: 141, get: 139 
	.allstar user: gossts
(reason: some account got closed or deleted)
For false number of closed_issues: because GitHub api will default count PR as closed_issues (resource: https://docs.github.com/en/rest/search/search?apiVersion=2022-11-28#search-issues-and-pull-requests)
solution: change url = f"{github_api_url}/repos/{org_name}/{repo_name}/issues?state=closed"
	into url = url = f"{github_api_url}/repos/{org_name}/{repo_name}/issues?state=closed&q=is:issue"